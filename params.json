{"name":"Net2","tagline":"https (http+ssl) analysis","body":"`Https的简单解析:`\r\n\r\n基本概念:\r\n===\r\n\r\nHTTPS 可以认为是 HTTP + TLS。HTTP 协议大家耳熟能详了，目前大部分 WEB 应用和网站都是使用 HTTP 协议传输的。\r\n\r\nTLS 是传输层加密协议，它的前身是 SSL 协议，最早由 netscape 公司于 1995 年发布，1999 年经过 IETF 讨论和规范后，改名为 TLS。如果没有特别说明，SSL 和 TLS 说的都是同一个协议［摘自百度百科］。\r\n\r\nhttps解决的问题：\r\n====\r\n总体来说，HTTPS 协议提供了三个强大的功能来对抗上述的劫持行为：\r\n\r\n* 1.内容加密。浏览器到百度服务器的内容都是以加密形式传输，中间者无法直接查看原始内容。\r\n\r\n* 2.身份认证。保证用户访问的是百度服务，即使被 DNS 劫持到了第三方站点，也会提醒用户没有访问百度服务，有可能被劫持\r\n\r\n* 3.数据完整性。防止内容被第三方冒充或者篡改。\r\n\r\n\r\n\r\n内容加密分类：\r\n====\r\n\r\n加密算法一般分为两种:对称加密和非对称加密。　　　　　　　\r\n\r\n    对称加密（也叫密钥加密）就是指加密和解密使用的是相同的密钥。\r\n    非对称加密（也叫公钥加密）就是指加密和解密使用了不同的密钥。\r\n对称加密是双方共同约定了一个秘钥，然后进行数据的加密。存在问题就是秘钥需要传播，所以不安全。　　　\r\n\r\n\r\n非对称加密主要用于密钥交换（也叫密钥协商），能够很好地解决这个问题。浏览器和服务器每次新建会话时都使用\r\n非对称密钥交换算法协商出对称密钥，使用这些对称密钥完成应用数据的加解密和验证，整个会话过程中的密钥只在\r\n内存中生成和保存，而且每个会话的对称密钥都不相同（除非会话复用），中间者无法窃取。    \r\n\r\n\r\nhttps整个过程：   \r\n====\r\n　其实整个过程还是比较简单的:     \r\n    \r\n* 1.首先浏览器向服务端发送https请求          \r\n* 2.然后服务端收到https的时候会向浏览器发送一个证书［其中包括公钥，颁发机关，有效期等］   \r\n* 3.放浏览器收到的时候首先对其证书做检查，然后产生一个随机数［对称密钥］使用刚才的公钥加密发给服务器   \r\n* 4.服务器收到时，使用自己的私钥进行解密［得到对称密钥］   \r\n* 5.然后浏览器就使用刚才的对称秘钥［随机数］进行数据加密传输   \r\n\r\n\r\n　　　估计有人会问，为啥最后的数据传输不使用公钥加密的方式传输恩，其实是这样的由于，采用RSA的方式进行加密和解密的\r\n时候是很耗费cpu的，所以使用了对称加密的传输，又有人会问：那为什么不直接使用对称秘钥进行加密传输恩？其实这也\r\n是https出现的原因，由于直接使用对称加密的话，由于其秘钥的传输是明文的，那么一旦被别人获取了则数据的传输是很\r\n不安全的，在这里https就是用了公钥加密的方式对其秘钥进行加密传输就解决了这个问题．   \r\n\r\n\r\n\r\n\r\n欢迎一起交流学习 \r\n====\r\n \r\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\r\n\r\n* 邮件(1031379296#qq.com, 把#换成@)\r\n* QQ: 1031379296\r\n* weibo: [@王发康](http://weibo.com/u/2786211992/home)\r\n\r\n\r\nThx\r\n====\r\n\r\n* chunshengsterATgmail.com\r\n\r\n\r\nAuthor\r\n====\r\n* Linux\\nginx\\golang\\c\\c++爱好者\r\n* 欢迎一起交流  一起学习# \r\n* Others say good and Others good\r\n\r\n\r\n","google":"https (http+ssl) analysis","note":"Don't delete this file! It's used internally to help with page regeneration."}